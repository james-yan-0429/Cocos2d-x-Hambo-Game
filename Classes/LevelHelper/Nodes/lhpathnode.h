//  This file was generated by LevelHelper
//  http://www.levelhelper.org
//
//  LevelHelperLoader.h
//  Created by Bogdan Vladu
//  Copyright 2011 Bogdan Vladu. All rights reserved.
//
////////////////////////////////////////////////////////////////////////////////
//
//  This software is provided 'as-is', without any express or implied
//  warranty.  In no event will the authors be held liable for any damages
//  arising from the use of this software.
//  Permission is granted to anyone to use this software for any purpose,
//  including commercial applications, and to alter it and redistribute it
//  freely, subject to the following restrictions:
//  The origin of this software must not be misrepresented; you must not
//  claim that you wrote the original software. If you use this software
//  in a product, an acknowledgment in the product documentation would be
//  appreciated but is not required.
//  Altered source versions must be plainly marked as such, and must not be
//  misrepresented as being the original software.
//  This notice may not be removed or altered from any source distribution.
//  By "software" the author refers to this code file and not the application 
//  that was used to generate this file.
//
////////////////////////////////////////////////////////////////////////////////

#include "cocos2d.h"
#include "Box2D/Box2D.h"

USING_NS_CC;

class LHSprite;
class LHPathNode : public CCNode
{
public:
	LHSprite* ccsprite; //week ptr
	b2Body* body; //week ptr
    CCString* uniqueName; //week ptr
	CCArray* pathPoints; //week ptr
    
	float speed;
	float interval;
	bool startAtEndPoint;
	bool isCyclic;
	bool restartOtherEnd;
	int axisOrientation; //0 NO ORIENTATION 1 X 2 Y

	int currentPoint;
	float elapsed;
	
	float initialAngle;
	double time;
	bool isLine;
	
	bool paused;

    CCNode* pathNotifierId;
    SEL_CallFuncND pathNotifierSel;

	void initPathWithPoints(CCArray* points);
	static float rotationDegreeFromPoint(CCPoint endPoint,CCPoint startPoint);

	void setUniqueName(CCString* name);
	void setSprite(LHSprite* spr);
	LHSprite* sprite;
	void setBody(b2Body* bd);

	void setSpeed(float value);

	void setStartAtEndPoint(bool val);
	void setRestartOtherEnd(bool val);

	void setPathNotifierObject(CCNode* object);
	void setPathNotifierSelector(SEL_CallFuncND sel);
	void reverse(CCArray* srcArray);

	LHPathNode(CCArray *points);
	~LHPathNode();
	void onTime(float dt);
	void visit();
};