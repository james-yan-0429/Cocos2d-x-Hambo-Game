//  This file was generated by LevelHelper
//  http://www.levelhelper.org
//
//  LevelHelperLoader.h
//  Created by Bogdan Vladu
//  Copyright 2011 Bogdan Vladu. All rights reserved.
//
////////////////////////////////////////////////////////////////////////////////
//
//  This software is provided 'as-is', without any express or implied
//  warranty.  In no event will the authors be held liable for any damages
//  arising from the use of this software.
//  Permission is granted to anyone to use this software for any purpose,
//  including commercial applications, and to alter it and redistribute it
//  freely, subject to the following restrictions:
//  The origin of this software must not be misrepresented; you must not
//  claim that you wrote the original software. If you use this software
//  in a product, an acknowledgment in the product documentation would be
//  appreciated but is not required.
//  Altered source versions must be plainly marked as such, and must not be
//  misrepresented as being the original software.
//  This notice may not be removed or altered from any source distribution.
//  By "software" the author refers to this code file and not the application 
//  that was used to generate this file.
//
////////////////////////////////////////////////////////////////////////////////

#ifndef LHBEZIERNODE_H
#define LHBEZIERNODE_H


#include "cocos2d.h"
#include "Box2D/Box2D.h"

USING_NS_CC;

class LHSprite;
class LHPathNode;
class LHBezierNode : public CCNode
{
	bool isClosed;
	bool isTile;
	bool isVisible;
	bool isLine;
	bool isPath;
	CCString* uniqueName;
	b2Body* body; //can be 0
	CCArray* pathPoints;
	CCArray* pathNodes;
	
	
	/////////for the tile feature
	CCTexture2D *texture;
	CCRect color;
	CCRect lineColor;
	float lineWidth;
	CCSize winSize;
	CCArray* trianglesHolder;
	CCArray* linesHolder;
	CCSize imageSize;
public:
	void initWithDictionary(CCDictionary* properties,CCLayer* ccLayer,b2World* world);

	LHPathNode* addSpriteOnPath(LHSprite* spr,float pathSpeed, bool startAtEndPoint,bool isCyclic, bool restartOtherEnd,int axis);

	void draw();

	~LHBezierNode();
	static CCPoint pointOnCurve(CCPoint p1 ,CCPoint p2 ,CCPoint p3 ,CCPoint p4 ,float t);
	void initTileVerticesFromDictionary(CCDictionary* bezierDict);
	void initPathPointsFromDictionary(CCDictionary* bezierDict);
	void createBodyFromDictionary(CCDictionary* bezierDict,b2World* world);
};

#endif